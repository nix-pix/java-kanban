package ru.yandex.practicum.tasktracker;

public class Manager {
    int id; // уникальный номер задачи
}

/* Этот класс будет запускаться на старте программы и управлять всеми задачами.
В нём должны быть реализованы следующие функции:
1.Возможность хранить задачи всех типов. Для этого вам нужно выбрать подходящую коллекцию.
2.Методы для каждого из типа задач(Задача/Эпик/Подзадача):
- Получение списка всех задач.
- Удаление всех задач.
- Получение по идентификатору.
- Создание. Сам объект должен передаваться в качестве параметра.
- Обновление. Новая версия объекта с верным идентификатором передаётся в виде параметра.
- Удаление по идентификатору.
3.Дополнительные методы:
- Получение списка всех подзадач определённого эпика.
4.Управление статусами осуществляется по следующему правилу:
- Менеджер сам не выбирает статус для задачи. Информация о нём приходит менеджеру вместе с информацией о самой задаче.
  По этим данным в одних случаях он будет сохранять статус, в других будет рассчитывать.
  (это означает, что не существует отдельного метода, который занимался бы только обновлением статуса задачи.
  Вместо этого статус задачи обновляется вместе с полным обновлением задачи.)
- Для эпиков: (Пользователь не должен иметь возможности поменять статус эпика самостоятельно.)
  если у эпика нет подзадач или все они имеют статус NEW, то статус должен быть NEW.
  если все подзадачи имеют статус DONE, то и эпик считается завершённым — со статусом DONE.
  во всех остальных случаях статус должен быть IN_PROGRESS.
  (Когда меняется статус любой подзадачи в эпике, вам необходимо проверить,
  что статус эпика изменится соответствующим образом. При этом изменение статуса эпика может и не произойти,
  если в нём, к примеру, всё ещё есть незакрытые задачи.) */